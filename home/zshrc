# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
[[ "$TERM" == "xterm" ]] && export TERM=xterm-256color
ZSH_THEME="bullet-train"

# Set list of themes to load
# Setting this variable when ZSH_THEME=random
# cause zsh load theme from this variable instead of
# looking in ~/.oh-my-zsh/themes/
# An empty array have no effect
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
  zsh-autosuggestions
  docker-compose
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Bullet Train for oh-my-zsh
BULLETTRAIN_PROMPT_ORDER=(
    time
    status
    custom
    # context
    dir
    screen
    perl
    ruby
    virtualenv
    # nvm
    aws
    go
    elixir
    git
    hg
    cmd_exec_time
)
BULLETTRAIN_VIRTUALENV_FG=blue

# for tmux windows title
DISABLE_AUTO_TITLE=true

# time command format
TIMEFMT=$'\nreal\t%*Es\tcpu\t%P\nuser\t%*Us\tsys\t%*Ss'

# virtualenvwrapper
# Since source virtualenvwrapper.sh is slow, load it dynamically
# The workon function will be replaced after sourced real script
# `source virtualenvwrapper.sh` fails when `command python` fails
# Some systems only have python3 command, so try it first
if command -v python3 2>&1 >/dev/null; then
    export VIRTUALENVWRAPPER_PYTHON=$(command -v python3)
fi
_vw=
if [ -r "$HOME/.local/bin/virtualenvwrapper.sh" ] # pip install --user
then _vw="$HOME/.local/bin/virtualenvwrapper.sh"
elif [ -r "/usr/share/virtualenvwrapper/virtualenvwrapper.sh" ] # apt-get install
then _vw="/usr/share/virtualenvwrapper/virtualenvwrapper.sh"
elif [ -r /usr/local/bin/virtualenvwrapper.sh ] # sudo pip install
then _vw=/usr/local/bin/virtualenvwrapper.sh
elif [ -r /usr/bin/virtualenvwrapper.sh ]
then _vw=/usr/bin/virtualenvwrapper.sh
elif which virtualenvwrapper.sh 1>/dev/null
then _vw="`which virtualenvwrapper.sh`"
fi
if [ -n "$_vw" ]; then
    function workon {
        source "$_vw"
        workon $@
    }
    _load_virtu() {
        source "$_vw"
        reply=(`workon`)
    }
    compctl -K _load_virtu workon
fi

if [ -f ~/.zshrc.local ]; then source ~/.zshrc.local; fi
